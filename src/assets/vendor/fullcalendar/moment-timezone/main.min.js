/* !
FullCalendar Moment Timezone Plugin v4.3.0
Docs & License: https://fullcalendar.io/
(c) 2019 Adam Shaw
*/
!(function (e, t) { typeof exports === 'object' && typeof module !== 'undefined' ? t(exports, require('moment'), require('moment-timezone/builds/moment-timezone-with-data'), require('@fullcalendar/core')) : typeof define === 'function' && define.amd ? define(['exports', 'moment', 'moment-timezone/builds/moment-timezone-with-data', '@fullcalendar/core'], t) : t((e = e || self).FullCalendarMomentTimezone = {}, e.moment, e.moment, e.FullCalendar) }(this, function (e, t, n, o) { 'use strict'; var r = function (e, t) { return (r = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (e, t) { e.__proto__ = t } || function (e, t) { for (const n in t)t.hasOwnProperty(n) && (e[n] = t[n]) })(e, t) }; const i = t; const u = (function (e) { function t() { return e !== null && e.apply(this, arguments) || this } return (function (e, t) { function n() { this.constructor = e }r(e, t), e.prototype = t === null ? Object.create(t) : (n.prototype = t.prototype, new n()) }(t, e)), t.prototype.offsetForArray = function (e) { return i.tz(e, this.timeZoneName).utcOffset() }, t.prototype.timestampToArray = function (e) { return i.tz(e, this.timeZoneName).toArray() }, t }(o.NamedTimeZoneImpl)); const m = o.createPlugin({ namedTimeZonedImpl: u }); e.default = m, Object.defineProperty(e, '__esModule', { value: !0 }) }))