/* !
FullCalendar List View Plugin v4.3.0
Docs & License: https://fullcalendar.io/
(c) 2019 Adam Shaw
*/
!(function (e, t) { typeof exports === 'object' && typeof module !== 'undefined' ? t(exports, require('@fullcalendar/core')) : typeof define === 'function' && define.amd ? define(['exports', '@fullcalendar/core'], t) : t((e = e || self).FullCalendarList = {}, e.FullCalendar) }(this, function (e, t) { 'use strict'; var n = function (e, t) { return (n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (e, t) { e.__proto__ = t } || function (e, t) { for (const n in t)t.hasOwnProperty(n) && (e[n] = t[n]) })(e, t) }; function r(e, t) { function r() { this.constructor = e }n(e, t), e.prototype = t === null ? Object.create(t) : (r.prototype = t.prototype, new r()) } const s = (function (e) { function n(t) { const n = e.call(this, t.context) || this; return n.listView = t, n } return r(n, e), n.prototype.attachSegs = function (e) { e.length ? this.listView.renderSegList(e) : this.listView.renderEmptyMessage() }, n.prototype.detachSegs = function () {}, n.prototype.renderSegHtml = function (e) { let n; const r = this.context; const s = r.view; const a = r.theme; const i = e.eventRange; const o = i.def; const l = i.instance; const d = i.ui; const c = o.url; const p = ['fc-list-item'].concat(d.classNames); const h = d.backgroundColor; return n = o.allDay ? t.getAllDayHtml(s) : t.isMultiDayRange(i.range) ? e.isStart ? t.htmlEscape(this._getTimeText(l.range.start, e.end, !1)) : e.isEnd ? t.htmlEscape(this._getTimeText(e.start, l.range.end, !1)) : t.getAllDayHtml(s) : t.htmlEscape(this.getTimeText(i)), c && p.push('fc-has-url'), '<tr class="' + p.join(' ') + '">' + (this.displayEventTime ? '<td class="fc-list-item-time ' + a.getClass('widgetContent') + '">' + (n || '') + '</td>' : '') + '<td class="fc-list-item-marker ' + a.getClass('widgetContent') + '"><span class="fc-event-dot"' + (h ? ' style="background-color:' + h + '"' : '') + '></span></td><td class="fc-list-item-title ' + a.getClass('widgetContent') + '"><a' + (c ? ' href="' + t.htmlEscape(c) + '"' : '') + '>' + t.htmlEscape(o.title || '') + '</a></td></tr>' }, n.prototype.computeEventTimeFormat = function () { return { hour: 'numeric', minute: '2-digit', meridiem: 'short' } }, n }(t.FgEventRenderer)); const a = (function (e) { function n(n, r, a, o) { const l = e.call(this, n, r, a, o) || this; l.computeDateVars = t.memoize(i), l.eventStoreToSegs = t.memoize(l._eventStoreToSegs); const d = l.eventRenderer = new s(l); l.renderContent = t.memoizeRendering(d.renderSegs.bind(d), d.unrender.bind(d)), l.el.classList.add('fc-list-view'); for (let c = 0, p = (l.theme.getClass('listView') || '').split(' '); c < p.length; c++) { const h = p[c]; h && l.el.classList.add(h) } return l.scroller = new t.ScrollComponent('hidden', 'auto'), l.el.appendChild(l.scroller.el), l.contentEl = l.scroller.el, n.calendar.registerInteractiveComponent(l, { el: l.el }), l } return r(n, e), n.prototype.render = function (e) { const t = this.computeDateVars(e.dateProfile); const n = t.dayDates; const r = t.dayRanges; this.dayDates = n, this.renderContent(this.eventStoreToSegs(e.eventStore, e.eventUiBases, r)) }, n.prototype.destroy = function () { e.prototype.destroy.call(this), this.renderContent.unrender(), this.scroller.destroy(), this.calendar.unregisterInteractiveComponent(this) }, n.prototype.updateSize = function (t, n, r) { e.prototype.updateSize.call(this, t, n, r), this.eventRenderer.computeSizes(t), this.eventRenderer.assignSizes(t), this.scroller.clear(), r || this.scroller.setHeight(this.computeScrollerHeight(n)) }, n.prototype.computeScrollerHeight = function (e) { return e - t.subtractInnerElHeight(this.el, this.scroller.el) }, n.prototype._eventStoreToSegs = function (e, n, r) { return this.eventRangesToSegs(t.sliceEventStore(e, n, this.props.dateProfile.activeRange, this.nextDayThreshold).fg, r) }, n.prototype.eventRangesToSegs = function (e, t) { for (var n = [], r = 0, s = e; r < s.length; r++) { const a = s[r]; n.push.apply(n, this.eventRangeToSegs(a, t)) } return n }, n.prototype.eventRangeToSegs = function (e, n) { let r; let s; let a; const i = this.dateEnv; const o = this.nextDayThreshold; const l = e.range; const d = e.def.allDay; const c = []; for (r = 0; r < n.length; r++) if ((s = t.intersectRanges(l, n[r])) && (a = { component: this, eventRange: e, start: s.start, end: s.end, isStart: e.isStart && s.start.valueOf() === l.start.valueOf(), isEnd: e.isEnd && s.end.valueOf() === l.end.valueOf(), dayIndex: r }, c.push(a), !a.isEnd && !d && r + 1 < n.length && l.end < i.add(n[r + 1].start, o))) { a.end = l.end, a.isEnd = !0; break } return c }, n.prototype.renderEmptyMessage = function () { this.contentEl.innerHTML = '<div class="fc-list-empty-wrap2"><div class="fc-list-empty-wrap1"><div class="fc-list-empty">' + t.htmlEscape(this.opt('noEventsMessage')) + '</div></div></div>' }, n.prototype.renderSegList = function (e) { let n; let r; let s; const a = this.groupSegsByDay(e); const i = t.htmlToElement('<table class="fc-list-table ' + this.calendar.theme.getClass('tableList') + '"><tbody></tbody></table>'); const o = i.querySelector('tbody'); for (n = 0; n < a.length; n++) if (r = a[n]) for (o.appendChild(this.buildDayHeaderRow(this.dayDates[n])), r = this.eventRenderer.sortEventSegs(r), s = 0; s < r.length; s++)o.appendChild(r[s].el); this.contentEl.innerHTML = '', this.contentEl.appendChild(i) }, n.prototype.groupSegsByDay = function (e) { let t; let n; const r = []; for (t = 0; t < e.length; t++)(r[(n = e[t]).dayIndex] || (r[n.dayIndex] = [])).push(n); return r }, n.prototype.buildDayHeaderRow = function (e) { const n = this.dateEnv; const r = t.createFormatter(this.opt('listDayFormat')); const s = t.createFormatter(this.opt('listDayAltFormat')); return t.createElement('tr', { className: 'fc-list-heading', 'data-date': n.formatIso(e, { omitTime: !0 }) }, '<td class="' + (this.calendar.theme.getClass('tableListHeading') || this.calendar.theme.getClass('widgetHeader')) + '" colspan="3">' + (r ? t.buildGotoAnchorHtml(this, e, { class: 'fc-list-heading-main' }, t.htmlEscape(n.format(e, r))) : '') + (s ? t.buildGotoAnchorHtml(this, e, { class: 'fc-list-heading-alt' }, t.htmlEscape(n.format(e, s))) : '') + '</td>') }, n }(t.View)); function i(e) { for (var n = t.startOfDay(e.renderRange.start), r = e.renderRange.end, s = [], a = []; n < r;)s.push(n), a.push({ start: n, end: t.addDays(n, 1) }), n = t.addDays(n, 1); return { dayDates: s, dayRanges: a } }a.prototype.fgSegSelector = '.fc-list-item'; const o = t.createPlugin({ views: { list: { class: a, buttonTextKey: 'list', listDayFormat: { month: 'long', day: 'numeric', year: 'numeric' } }, listDay: { type: 'list', duration: { days: 1 }, listDayFormat: { weekday: 'long' } }, listWeek: { type: 'list', duration: { weeks: 1 }, listDayFormat: { weekday: 'long' }, listDayAltFormat: { month: 'long', day: 'numeric', year: 'numeric' } }, listMonth: { type: 'list', duration: { month: 1 }, listDayAltFormat: { weekday: 'long' } }, listYear: { type: 'list', duration: { year: 1 }, listDayAltFormat: { weekday: 'long' } } } }); e.ListView = a, e.default = o, Object.defineProperty(e, '__esModule', { value: !0 }) }))